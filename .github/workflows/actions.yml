# ================================================
# OpenWrt CI - Compile OpenWrt by GitHub Actions.
# This is free software, lisence use MIT.
# Copyright (C) 2020 P3TERX <https://p3terx.com>
# Copyright (C) 2021 Ango <m@ango.me>
# ================================================

name: OpenWrt Actions

on:
  push:
    branches: [actions]
  # schedule:
  #   - cron: 0 20 * * *
  workflow_dispatch:

jobs:
  build_openwrt:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #1# Space cleanup
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
          #2# Install packages
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Compilation
        env:
          SETUP_FILE: setup.sh
          TZ: Asia/Shanghai
        run: |
          #1# Configuration
          cd $GITHUB_WORKSPACE
          sed -i "s/\r//" ./$SETUP_FILE
          chmod +x $SETUP_FILE && ./$SETUP_FILE
          #2# Make config & download
          cd $GITHUB_WORKSPACE/openwrt
          make defconfig && make download -j8
          rm -rf $(find dl -size -1024c)
          #3# Compile firmware
          make -j$(nproc) || make -j1 || make -j1 V=s
          grep '^CONFIG_TARGET.*DEVICE.*=y' ./.config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          #4# Organize files
          cd ./bin/targets/*/* && rm -rf ./packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload Files
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

# ================================================
